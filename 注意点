多条记录写入csv
content = re.findall(contentPat, html.text)
#print(content)
frame = pd.DataFrame(content)
frame.to_csv('E:\BaiduNetdiskDownload\第14章 文本挖掘\wwxd.csv', header=False, index=False, mode='a+')


去除重复行

rFile = open('a.txt', 'r')
wFile = open('b.txt', 'w')
allLine = rFile.readlines()
rFile.close()
s = set()
for i in allLine:
    s.add(i)
for i in s:
    wFile.write(i)

    一面：基础面
    一面是一个差不多26、7岁的小哥，面相较好，拿着笔记本，在过道里找了一个桌子就开始面试了，首先自我介绍，面试小哥快速浏览了一下简历（看的比较细，还寒暄了一下学校专业什么的），开始提问：

    目前实习主要是做什么？简单介绍下，主要就是介绍，中间并没有提问细节什么的。

    用过spark吗？使用场景是什么？

    用过hive吗？使用过join操作吗？知道join的实现技术吗？（最后一个问题不会）

    如果给你几张表，想得到一些数据，用spark怎么处理？

    使用过hadoop吗？（答：没怎么用过）

    怎么解决内存不足的情况下使用python处理大规模数据？

    如何做分布式计算？

    说一下c++里面的const和define区别？

    说一下java、c++和python之间的不同？

    写个程序吧：有序字符串如“12334556”如何变成“1234535”。（两分钟写好。。）

    写个程序吧：字符串“abcdadc”输出最长递增子串的长度。（刚开始写了一个n^2复杂度的，怎么降低时间复杂度？又写了一个n^2logn的。然后面试官提示我可以用hash set，是否可以降低时间负责度？我没想出来，经过面试官提示，最后又写了一下。

    一面结束。大概35分钟，面试小哥问的都是很基础的东西和数据处理的东西，也没有很为难我，但是机器学习的东西一点没问，我当时有点疑问，问了一下他们的业务。然后让我等待二面。面试中间，面试小哥不断用电脑打字，应该是记录我的面试表现吧。。。

    二面：项目面
    二面是个30多岁的男士，该面试官拿着几张纸就来了（没带电脑），说等我一下我去个卫生间。开始面试了，该面试官翘个二郎腿，拿着我的简历，一边看一边说：自我介绍一下吧，介绍完以后，问我你这是第一面还是第二面（excuse me？这个问我？？）然后问我第一面问的什么，然后说：从你简历你挑一个项目聊聊吧。（难道面试官都不用和其他面试官交流或者看一下已经面试过的面试官的评价吗？）

    我讲了一个我参加阿里比赛时的项目。刚说了大概两分钟，面试官说，你不要这么说，你可以按照***思路说，这样我比较好理解一点，我说没问题。讲的过程中，被打断了很多次，主要问的是一些实现细节问题，比如：数据处理、特征工程等，令我惊讶的是：在中间的面试过程中，这位面试官竟然把鞋脱了，盘腿坐到了椅子上。

    下面截取部门面试对话：

    面试官：异常值检测你怎么做的？答：我当时是用plot画图看的。面试官诧异，一脸嫌弃：你就用手画的？？我说：因为异常数据比较少，而且偏离幅度都比较大，所以画图比较方便。然后我又补上，当然还可以使用其他异常检测方法，比如高斯异常检测，随机森林等。面试官：随机森林？随机森林怎么做？答：可以统一样本点位于决策树叶节点的个数。面试官诧异：这个怎么做？第一听说。我解释了一下，该这么做，但是因为我只知道这么一个方法，但是并没有很了解，所以回答的不太好，接着面试官又逼问了一下，我说我记不太清了有点。此时面试官表情失望，对我有点怀疑，无奈的说：下一个问题吧。这个问题，我后来调研了一下：具体要用相似度矩阵。
    面试官：如果让你现在来做这个项目，你觉得你可以改进什么地方？我说：可以用xgboost模型试一下，因为当时研一，不了解这个模型。面试官无奈：难道你这两年就仅仅学会了一个模型？我有些慌，连忙说到：在数据处理方面也可以改进，比如根据具体的场景问题提取更多的数据特征，我说了一种提取时间序列提取邻域信息的方法。面试官说：这不就是多增加了一种特征吗？我说：但是用这种方法做特征会更有效一点。面试官有些不太满意，可能也是因为我解释的不太好吧。。。我说：数据处理也可以改进一下，比如异常检测方法，将特征粒度再细一点。面试官：如果不考虑数据和特征，你觉模型上有什么改进的么？此时我有点蒙蔽，不知道面试官再问什么，不考虑数据也不能换模型，我该怎么回答呢。





1 ）几种模型（ svm ， lr ， gbdt ， em ）的原理以及公式推导；

2 ） rf ， gbdt 的区别； gbdt ， xgboost 的区别（烂大街的问题最好从底层原理去分析回答）；

3 ）决策树处理连续值的方法；

4 ）特征选择的方法；

5 ）过拟合的解决方法；

6 ） kmeans 的原理，优缺点以及改进；

7 ）常见分类模型（ svm ，决策树，贝叶斯等）的优缺点，适用场景以及如何选型；

8 ） svm 为啥要引入拉格朗日的优化方法；

9 ）假设面试官什么都不懂，详细解释 CNN 的原理；

10 ）海量的 item 算文本相似度的优化方法；

11 ）梯度下降的优缺点；

12 ） em 与 kmeans 的关系；

13 ） L1 与 L2 的区别以及如何解决 L1 求导困难；

14 ）如何用尽可能少的样本训练模型同时又保证模型的性能；

15 ）解释 word2vec 的原理以及哈夫曼树的改进；

16 ）对推荐算法的未来看法；

17 ）在模型的训练迭代中，怎么评估效果；

18 ）有几个 G 的文本，每行记录了访问 ip 的 log ，如何快速统计 ip 出现次数最高的 10 个 ip ；如果只用 linux 指令又该怎么解决；

19 ）一个绳子烧完需要 1 个小时，假设所有绳子的材质都不一样，也不均匀，怎么取出 1 小时加 15 分钟；

20 ）假设有个 M*N 的方格，从最左下方开始往最右上方走，每次只能往右或者往上，问有多少种走法，假设中间有若干个格子不能走，又有多少种走法；

21 ）实现 hmm 的状态转移代码；

22 ）最短路径代码；

23 ）拼车软件是如何定价的以及如何优化；

24 ） 100 张牌，每次只能抽一张，抽过的牌会丢掉，怎么选出最大的牌；

25 ）怎么预测降雨量；

26 ） kmeans 代码；

27 ） mr 方案解决矩阵相乘的代码；

28 ） sql 语句的一些优化技巧；

29 ）关于集群调度的一些经验 trick 掌握多少；

30 ）设计一个系统可以实时统计任意 ip 在过去一个小时的访问量；

31 ）设计 LRU 系统；
