1、DBSCAN简介

DBSCAN（Density-Based Spatial Clustering of Applications with Noise，具有噪声的基于密度的聚类方法）是一种基于密度的空间聚类算法。该算法将具有足够密度的区域划分为簇，并在具有噪声的空间数据库中发现任意形状的簇，它将簇定义为密度相连的点的最大集合。

该算法利用基于密度的聚类的概念，即要求聚类空间中的一定区域内所包含对象（点或其他空间对象）的数目不小于某一给定阈值。DBSCAN算法的显著优点是聚类速度快且能够有效处理噪声点和发现任意形状的空间聚类。但是由于它直接对整个数据库进行操作且进行聚类时使用了一个全局性的表征密度的参数，因此也具有两个比较明显的弱点：

（1）当数据量增大时，要求较大的内存支持I/O消耗也很大；

（2）当空间聚类的密度不均匀、聚类间距差相差很大时，聚类质量较差

2、DBSCAN和传统聚类算法对比

DBSCAN算法的目的在于过滤低密度区域，发现稠密度样本点。跟传统的基于层次的聚类和划分聚类的凸形聚类簇不同，该算法可以发现任意形状的聚类簇，与传统的算法相比它有如下优点：

（1）与K-MEANS比较起来，不需要输入要划分的聚类个数；

（2）聚类簇的形状没有偏倚；

（3）可以在需要时输入过滤噪声的参数；



DBSCAN聚类：density-based spatial clustering of applications with noise    密度聚类

核心对象：若某个点的密度达到算法设定的阈值则其为核心点

领域的距离阈值：设定的半径r

直接密度可达：若某点p在点q的r邻域内，且q是核心点则p-q直接密度可达

密度可达：若有一个点的序列q0、q1、..qk，对任意qi-qi-1是直接密度可达，则称q0到qk直接密度可达



算法伪代码

算法描述：

算法： DBSCAN

输入： E——半径

MinPts——给定点在E邻域内成为核心对象的最小邻域点数。

D——集合。

输出： 目标类簇集合

方法： Repeat

1） 判断输入点是否为核心对象

2） 找出核心对象的E邻域中的所有直接密度可达点。

Until 所有输入点都判断完毕

Repeat

针对所有核心对象的E邻域内所有直接密度可达点找到最大密度相连对象集合，中间涉及到一些密度可达对象的合并。

Until 所有核心对象的E领域都遍历完毕
